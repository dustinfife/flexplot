% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compare.fits_methods.R
\name{generate_predictions}
\alias{generate_predictions}
\title{Generate Predictions from Model Objects}
\usage{
generate_predictions(model, re, pred.values, pred.type, report.se)
}
\arguments{
\item{model}{A fitted model object (e.g., lm, glm, lmerMod, keras model, etc.)}

\item{re}{Logical. Should random effects be predicted? Only applies to mixed models.
For most model types, this parameter is ignored. Default is FALSE.}

\item{pred.values}{A data frame containing predictor values for which predictions
should be generated. Variable names should match those used in model fitting.}

\item{pred.type}{Character string specifying the type of predictions to generate.
Options depend on the model type (e.g., "response", "link" for glm models).
Default is "response".}

\item{report.se}{Logical. Should standard errors be reported alongside predictions?
Not all model types support this feature. Default is FALSE.}
}
\value{
A data frame with at least two columns:
  \item{prediction}{The predicted values}
  \item{model}{A character string identifying the model type or name}

  For mixed models when \code{re = TRUE}, may return both fixed and random
  effect predictions. Some methods may include additional columns such as
  standard errors when \code{report.se = TRUE}.
}
\description{
This is a generic function for generating predictions from various types of
model objects. It is primarily used internally by \code{\link{compare.fits}}
to create consistent prediction outputs across different modeling frameworks.
}
\details{
This generic function provides a consistent interface for generating predictions
across different model types. Each model class should have its own method
that handles the specifics of prediction for that model type.

Currently supported model types include:
\itemize{
  \item Linear models (lm)
  \item Generalized linear models (glm) 
  \item Mixed-effects models (lmerMod, glmerMod from lme4)
  \item Ordinal regression models (polr from MASS)
  \item Random forest models (RandomForest from party)
  \item Regression trees (rpart)
  \item Neural networks (keras models via flex_nn package)
}
}
\examples{
# Basic usage with linear model
data(mtcars)
model = lm(mpg ~ hp + wt, data = mtcars)
pred_data = data.frame(hp = c(100, 150, 200), wt = c(2.5, 3.0, 3.5))
predictions = generate_predictions(model, re = FALSE, pred_data, "response", FALSE)
head(predictions)

# With mixed model (if lme4 available)
\dontrun{
library(lme4)
data(sleepstudy)
mixed_model = lmer(Reaction ~ Days + (1|Subject), data = sleepstudy)
pred_data = data.frame(Days = c(0, 5, 9), Subject = c("308", "309", "310"))

# Fixed effects only
fixed_preds = generate_predictions(mixed_model, re = FALSE, pred_data, 
                                  "response", FALSE)

# Both fixed and random effects
both_preds = generate_predictions(mixed_model, re = TRUE, pred_data, 
                                 "response", FALSE)
}

}
\seealso{
\code{\link{compare.fits}} for the main function that uses this generic
}
